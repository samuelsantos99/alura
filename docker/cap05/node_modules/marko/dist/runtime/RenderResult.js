var domInsert = require("./dom-insert");

function getRootNode(el) {
  var cur = el;
  while (cur.parentNode) cur = cur.parentNode;
  return cur;
}

function getComponentDefs(result) {
  var componentDefs = result.t_;

  if (!componentDefs) {
    throw Error("No component");
  }
  return componentDefs;
}

function RenderResult(out) {
  this.out = this.u_ = out;
  this.t_ = undefined;
}

module.exports = RenderResult;

var proto = RenderResult.prototype = {
  getComponent: function () {
    return this.getComponents()[0];
  },
  getComponents: function (selector) {
    if (this.t_ === undefined) {
      throw Error("Not added to DOM");
    }

    var componentDefs = getComponentDefs(this);

    var components = [];

    componentDefs.forEach(function (componentDef) {
      var component = componentDef.v_;
      if (!selector || selector(component)) {
        components.push(component);
      }
    });

    return components;
  },

  afterInsert: function (host) {
    var out = this.u_;
    var componentsContext = out.t_;
    if (componentsContext) {
      this.t_ = componentsContext.ah_(host);
    } else {
      this.t_ = null;
    }

    return this;
  },
  getNode: function (host) {
    return this.u_.ai_(host);
  },
  getOutput: function () {
    return this.u_.aj_();
  },
  toString: function () {
    return this.u_.toString();
  },
  document: typeof document === "object" && document
};

Object.defineProperty(proto, "html", {
  get: function () {
    return this.toString();
  }
});

Object.defineProperty(proto, "context", {
  get: function () {
    return this.u_;
  }
});

// Add all of the following DOM methods to Component.prototype:
// - appendTo(referenceEl)
// - replace(referenceEl)
// - replaceChildrenOf(referenceEl)
// - insertBefore(referenceEl)
// - insertAfter(referenceEl)
// - prependTo(referenceEl)
domInsert(proto, function getEl(renderResult, referenceEl) {
  return renderResult.getNode(getRootNode(referenceEl));
}, function afterInsert(renderResult, referenceEl) {
  return renderResult.afterInsert(getRootNode(referenceEl));
});