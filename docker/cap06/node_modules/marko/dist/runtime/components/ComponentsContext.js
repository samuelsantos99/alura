"use strict";

var GlobalComponentsContext = require("./GlobalComponentsContext");

function ComponentsContext(out, parentComponentsContext) {
  var globalComponentsContext;
  var componentDef;

  if (parentComponentsContext) {
    globalComponentsContext = parentComponentsContext.r_;
    componentDef = parentComponentsContext.q_;

    var nestedContextsForParent;
    if (!(nestedContextsForParent = parentComponentsContext._e_)) {
      nestedContextsForParent = parentComponentsContext._e_ = [];
    }

    nestedContextsForParent.push(this);
  } else {
    globalComponentsContext = out.global.t_;
    if (globalComponentsContext === undefined) {
      out.global.t_ = globalComponentsContext = new GlobalComponentsContext(out);
    }
  }

  this.r_ = globalComponentsContext;
  this.t_ = [];
  this.u_ = out;
  this.q_ = componentDef;
  this._e_ = undefined;
  this.y_ = parentComponentsContext && parentComponentsContext.y_;
}

ComponentsContext.prototype = {
  ah_: function (host) {
    var componentDefs = this.t_;

    ComponentsContext._I_(componentDefs, host);

    this.u_.emit("aP_");

    // Reset things stored in global since global is retained for
    // future renders
    this.u_.global.t_ = undefined;

    return componentDefs;
  }
};

function getComponentsContext(out) {
  return out.t_ || (out.t_ = new ComponentsContext(out));
}

module.exports = exports = ComponentsContext;

exports.U_ = getComponentsContext;